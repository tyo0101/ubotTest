{"version":3,"sources":["TAX.js"],"names":["calculateChecksum","taxNumber","firstPart","secondPart","weight","i","length","number","parseInt","charAt","Math","floor","sum","calculateTAXChecksum","cleanedInput","trim","expectedChecksum","reg","charCodeAt"],"mappings":";;;;;;;;AAAA;AACO,SAASA,iBAAT,CAA2BC,SAA3B,EAAsC;AAC3C,MAAIC,SAAS,GAAG,CAAhB;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAf,CAH2C,CAGF;;AACzC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,SAAS,CAACK,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,QAAME,MAAM,GAAGC,QAAQ,CAACP,SAAS,CAACQ,MAAV,CAAiBJ,CAAjB,CAAD,CAAR,GAAgCD,MAAM,CAACC,CAAD,CAArD;AACAH,IAAAA,SAAS,IAAIQ,IAAI,CAACC,KAAL,CAAWJ,MAAM,GAAG,EAApB,CAAb;AACAJ,IAAAA,UAAU,IAAII,MAAM,GAAG,EAAvB;AACD;;AACD,MAAMK,GAAG,GAAGV,SAAS,GAAGC,UAAxB;AACA,SAAOS,GAAP;AACD;;AAAA;;AAEM,SAASC,oBAAT,CAA8BZ,SAA9B,EAAyC;AAC5C,MAAMa,YAAY,GAAGb,SAAS,CAACc,IAAV,EAArB,CAD4C,CAE5C;;AACA,MAAMC,gBAAgB,GAAGhB,iBAAiB,CAACc,YAAD,CAA1C;;AAEA,OAAI,IAAIT,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGS,YAAY,CAACR,MAAhC,EAAwCD,CAAC,EAAzC,EACA;AACE,QAAMY,GAAG,GAAGH,YAAY,CAACT,CAAD,CAAZ,CAAgBa,UAAhB,CAA2B,CAA3B,CAAZ;;AACA,QAAGD,GAAG,GAAC,EAAJ,IAAUA,GAAG,GAAC,EAAjB,EACA;AACE;AACD;AACF;;AAED,MAAID,gBAAgB,GAAG,EAAnB,KAA0B,CAA9B,EAAiC;AAC7B,8CAAeF,YAAf;AACH,GAFD,MAEO,IAAIA,YAAY,CAAC,CAAD,CAAZ,KAAoB,GAApB,IAA2B,CAACE,gBAAgB,GAAG,CAApB,IAAyB,EAAzB,KAAgC,CAA/D,EAAkE;AACvE,8CAAeF,YAAf;AACD,GAFM,MAED;AACF,0DAAiBA,YAAjB;AACH;AACF","sourcesContent":["// 計算統一編號的檢查碼\r\nexport function calculateChecksum(taxNumber) {\r\n  let firstPart = 0;\r\n  let secondPart = 0;\r\n  const weight = [1, 2, 1, 2, 1, 2, 4, 1]; // 權重陣列  \r\n  for (let i = 0; i < taxNumber.length; i++) {\r\n    const number = parseInt(taxNumber.charAt(i)) * weight[i];\r\n    firstPart += Math.floor(number / 10);\r\n    secondPart += number % 10;\r\n  }\r\n  const sum = firstPart + secondPart;\r\n  return sum;\r\n};\r\n    \r\nexport function calculateTAXChecksum(taxNumber) {  \r\n    const cleanedInput = taxNumber.trim();\r\n    // 檢查統一編號格式\r\n    const expectedChecksum = calculateChecksum(cleanedInput)\r\n\r\n    for(let i = 0; i < cleanedInput.length; i++)\r\n    {\r\n      const reg = cleanedInput[i].charCodeAt(0);\r\n      if(reg<48 || reg>57)\r\n      {\r\n        return `統一編號應該全為數字`;\r\n      }\r\n    }\r\n\r\n    if (expectedChecksum % 10 === 0) {\r\n        return `統一編號 ${cleanedInput} 的檢查碼正確`;\r\n    } else if (cleanedInput[6] === '7' && (expectedChecksum + 1) % 10 === 0) {\r\n      return `統一編號 ${cleanedInput} 的檢查碼正確耶`;\r\n    }else {\r\n        return `您的統一編號 ${cleanedInput} 錯誤。`;\r\n    }\r\n  }"],"file":"TAX.dev.js"}