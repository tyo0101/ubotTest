{"version":3,"sources":["ID.js"],"names":["calculateChecksum","idNumber","F","areaCodeMap","charAt","areaCode","parseInt","A","B","C","D","E","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","firstChar","firstPart","Math","floor","digits","substr","secondPart","i","calculateIDChecksum","cleanedInput","trim","enteredChecksum","length","expectedChecksum","concat","correctIdNumber"],"mappings":"aAAO,SAASA,kBAAkBC,GAG1BC,IAFJ,IAAMC,EAAcF,EAAAG,OAAA,GAAAC,GAAAC,SAAAL,EAAAG,OAAA,IAAA,CAChBG,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAC/BT,EAAG,GAAIU,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAC/BC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAC/BC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAC/BC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IALtBC,IAAAC,EAAAC,KAAAC,MAAA9B,EAAA,IAAAA,EAAA,GAAA,EAAA+B,EAAAnC,EAAAoC,OAAA,GACeC,EADf,EAAAC,EAAA,EAAAA,EAAA,EAAAA,IAEND,GAFMhC,SAAA8B,EAAAhC,OAAAmC,KAAA,EAAAA,GAGhBvB,OAHgB,IAAAiB,EAAAK,GAAA,IAAA,GAGQ,SAHRE,oBAAAvC,GAGYmB,IAHZqB,EAAAxC,EAAAyC,OAAAC,EAAArC,SAAAmC,EAAArC,OAAAqC,EAAAG,OAAA,IAAAC,EAAA7C,kBAAAyC,EAAAJ,OAAA,EAAAI,EAAAG,OAAA,IAIKpB,GAAGmB,IAJRE,EAIe,MAAA,SAAAC,OAJfL,EAIe,YAAAK,OAJfH,GAKN,IALMI,EAAAN,EAAAJ,OAAA,EAAAI,EAAAG,OAAA,GAAAC,EAKC,MAAA,WAAAC,OALDH,EAKC,iBAAAG,OALDD,EAKC,iBAAAC,OALDC","file":"ID.min.js","sourcesContent":["export function calculateChecksum(idNumber) {\r\n    const areaCodeMap = {\r\n        A: 10, B: 11, C: 12, D: 13, E: 14,\r\n        F: 15, G: 16, H: 17, I: 34, J: 18,\r\n        K: 19, L: 20, M: 21, N: 22, O: 35,\r\n        P: 23, Q: 24, R: 25, S: 26, T: 27,\r\n        U: 28, V: 29, W: 32, X: 30, Y: 31, Z: 33\r\n    };\r\n\r\n    const firstChar = idNumber.charAt(0);\r\n    const genderNumber = parseInt(idNumber.charAt(1));\r\n    const areaCode = areaCodeMap[firstChar];\r\n    const firstPart = Math.floor(areaCode / 10) + (areaCode % 10) * 9;\r\n    const digits = idNumber.substr(1);\r\n    let secondPart = 0;\r\n    for (let i = 0; i < 8; i++) {\r\n        secondPart += parseInt(digits.charAt(i)) * (8 - i);\r\n    }\r\n    const sum = firstPart + secondPart;\r\n    const checksum = (10 - (sum % 10)) % 10;\r\n    return checksum;\r\n}\r\n\r\nexport function calculateIDChecksum(idNumber) {\r\n    const cleanedInput = idNumber.trim();\r\n    const enteredChecksum = parseInt(cleanedInput.charAt(cleanedInput.length - 1)); // 使用者輸入的檢查碼\r\n    const expectedChecksum = calculateChecksum(cleanedInput.substr(0, cleanedInput.length - 1)); // 預期的檢查碼\r\n\r\n    if (enteredChecksum === expectedChecksum) {\r\n        return `身份證字號 ${cleanedInput} 的檢查碼正確：${enteredChecksum}`;\r\n    } else {\r\n        const correctIdNumber = cleanedInput.substr(0, cleanedInput.length - 1) + expectedChecksum;\r\n        return `您輸入的檢查碼 ${enteredChecksum} 錯誤，正確的檢查碼應為 ${expectedChecksum}。重新計算後的身份證字號：${correctIdNumber}`;\r\n        idNumberInput.value = correctIdNumber; // 更新輸入框的值為正確的身份證字號\r\n    }\r\n}"]}