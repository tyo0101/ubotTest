{"version":3,"sources":["addAccount.js"],"names":["isValidNumber","input","test","generateVariant","NumberInput","index","number","parseInt","toString","padStart","length","generateVariants","document","value","trim","variants","i","push","variant","alert","result","getElementById","innerHTML","forEach","concat","Promise","resolve","then","_interopRequireWildcard","require","mainModule","error","console","incrementedNumber"],"mappings":"62BAGO,SAASA,cAAcC,GAC1B,MAAO,QAAQC,KAAKD,GAIjB,SAASE,gBAAgBC,EAAaC,GACzC,IAAIC,EAASF,EAPjB,OAU4BG,SAASD,GAAUD,GAZ/CG,WAAAC,SAAAH,EAAAI,OAAA,KAoBO,SAASC,mBAZT,IAASR,EAATS,SAAyBR,eAAoB,eAAAS,MAAAC,OAiBhD,GAAKd,cAAcI,GAAnB,CAOA,IADA,IAAMW,EAAW,GACRC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAZ1B,IAASL,EAAAA,gBAAmBP,EAAAY,GAC/BD,EAAAE,KAAAC,GAKIC,IAAMC,EAAAR,SAANS,eAAA,UACAD,EAAAE,UAAA,GAGJP,EAAAQ,QAAA,SAAAL,GAWIE,EAAOE,WAAP,MAAAE,OAA0BN,EAA1B,UATJO,QAAAC,UAAAC,KAAA,WAAA,OAAAC,wBAAAC,QAASb,gBACCE,KAAAA,SAAAA,GACEY,EAAMZ,SAFlB,MAiBW,SAAAa,GACHC,QAAQD,MAAM,8BAA+BA,UAtCjDE,MAAAA","file":"addAccount.min.js","sourcesContent":["// addAccount.js\n\n// 检查输入的是否是数字\nexport function isValidNumber(input) {\n    return /^\\d+$/.test(input); // 使用正则表达式检查是否是纯数字\n}\n\n// 生成单个变体的函数（整体逐位递增）\nexport function generateVariant(NumberInput, index) {\n    let number = NumberInput; // 复制输入的数字\n\n    // 将字符串转换为数字进行递增\n    let incrementedNumber = parseInt(number) + index;\n\n    // 将递增后的数字转换为字符串，并保持开头的零位\n    const variant = incrementedNumber.toString().padStart(number.length, '0');\n    return variant;\n}\n\n// 生成变体的主函数\nexport function generateVariants() {\n    // 获取输入的数字\n    const NumberInput = document.getElementById('NumberInput').value.trim();\n\n    // 检查输入的是否是数字\n    if (!isValidNumber(NumberInput)) {\n        alert('请输入有效的数字！');\n        return;\n    }\n\n    // 生成三个变体并显示结果\n    const variants = [];\n    for (let i = 1; i <= 3; i++) {\n        const variant = generateVariant(NumberInput, i);\n        variants.push(variant);\n    }\n\n    // 显示变体结果\n    const result = document.getElementById('result');\n    result.innerHTML = ''; // 清空结果区域\n    variants.forEach(variant => {\n        result.innerHTML += `<p>${variant}</p>`;\n    });\n\n    // 加载主模块\n    import('./main.js')\n        .then(mainModule => {\n            mainModule.init(); // 调用主模块的初始化函数\n        })\n        .catch(error => {\n            console.error('Failed to load main module:', error);\n        });\n}\n"]}