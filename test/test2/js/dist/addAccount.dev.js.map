{"version":3,"sources":["addAccount.js"],"names":["isValidNumber","input","test","generateVariant","NumberInput","index","number","incrementedNumber","parseInt","variant","toString","padStart","length","generateVariants","document","getElementById","value","trim","alert","variants","i","push","result","innerHTML","forEach","then","mainModule","init","error","console"],"mappings":";;;;;;;;;;;;;;;AAAA;AAEA;AACO,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;AACjC,SAAO,QAAQC,IAAR,CAAaD,KAAb,CAAP,CADiC,CACL;AAC/B,C,CAED;;;AACO,SAASE,eAAT,CAAyBC,WAAzB,EAAsCC,KAAtC,EAA6C;AAChD,MAAIC,MAAM,GAAGF,WAAb,CADgD,CACtB;AAE1B;;AACA,MAAIG,iBAAiB,GAAGC,QAAQ,CAACF,MAAD,CAAR,GAAmBD,KAA3C,CAJgD,CAMhD;;AACA,MAAMI,OAAO,GAAGF,iBAAiB,CAACG,QAAlB,GAA6BC,QAA7B,CAAsCL,MAAM,CAACM,MAA7C,EAAqD,GAArD,CAAhB;AACA,SAAOH,OAAP;AACH,C,CAED;;;AACO,SAASI,gBAAT,GAA4B;AAC/B;AACA,MAAMT,WAAW,GAAGU,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,KAAvC,CAA6CC,IAA7C,EAApB,CAF+B,CAI/B;;AACA,MAAI,CAACjB,aAAa,CAACI,WAAD,CAAlB,EAAiC;AAC7Bc,IAAAA,KAAK,CAAC,WAAD,CAAL;AACA;AACH,GAR8B,CAU/B;;;AACA,MAAMC,QAAQ,GAAG,EAAjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,QAAMX,OAAO,GAAGN,eAAe,CAACC,WAAD,EAAcgB,CAAd,CAA/B;AACAD,IAAAA,QAAQ,CAACE,IAAT,CAAcZ,OAAd;AACH,GAf8B,CAiB/B;;;AACA,MAAMa,MAAM,GAAGR,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AACAO,EAAAA,MAAM,CAACC,SAAP,GAAmB,EAAnB,CAnB+B,CAmBR;;AACvBJ,EAAAA,QAAQ,CAACK,OAAT,CAAiB,UAAAf,OAAO,EAAI;AACxBa,IAAAA,MAAM,CAACC,SAAP,iBAA0Bd,OAA1B;AACH,GAFD,EApB+B,CAwB/B;;AACA;AAAA,2CAAO,WAAP;AAAA,KACKgB,IADL,CACU,UAAAC,UAAU,EAAI;AAChBA,IAAAA,UAAU,CAACC,IAAX,GADgB,CACG;AACtB,GAHL,WAIW,UAAAC,KAAK,EAAI;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAc,6BAAd,EAA6CA,KAA7C;AACH,GANL;AAOH","sourcesContent":["// addAccount.js\n\n// 检查输入的是否是数字\nexport function isValidNumber(input) {\n    return /^\\d+$/.test(input); // 使用正则表达式检查是否是纯数字\n}\n\n// 生成单个变体的函数（整体逐位递增）\nexport function generateVariant(NumberInput, index) {\n    let number = NumberInput; // 复制输入的数字\n\n    // 将字符串转换为数字进行递增\n    let incrementedNumber = parseInt(number) + index;\n\n    // 将递增后的数字转换为字符串，并保持开头的零位\n    const variant = incrementedNumber.toString().padStart(number.length, '0');\n    return variant;\n}\n\n// 生成变体的主函数\nexport function generateVariants() {\n    // 获取输入的数字\n    const NumberInput = document.getElementById('NumberInput').value.trim();\n\n    // 检查输入的是否是数字\n    if (!isValidNumber(NumberInput)) {\n        alert('请输入有效的数字！');\n        return;\n    }\n\n    // 生成三个变体并显示结果\n    const variants = [];\n    for (let i = 1; i <= 3; i++) {\n        const variant = generateVariant(NumberInput, i);\n        variants.push(variant);\n    }\n\n    // 显示变体结果\n    const result = document.getElementById('result');\n    result.innerHTML = ''; // 清空结果区域\n    variants.forEach(variant => {\n        result.innerHTML += `<p>${variant}</p>`;\n    });\n\n    // 加载主模块\n    import('./main.js')\n        .then(mainModule => {\n            mainModule.init(); // 调用主模块的初始化函数\n        })\n        .catch(error => {\n            console.error('Failed to load main module:', error);\n        });\n}\n"],"file":"addAccount.dev.js"}