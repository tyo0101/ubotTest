{"version":3,"sources":["addAccount.js"],"names":["generateVariants","NumberInput","document","getElementById","value","trim","variants","i","variant","generateVariant","push","generateVariants2","console","log","isValidNumber","input","test","index","number","incrementedNumber","parseInt","toString","padStart","length"],"mappings":";;;;;;;;;;AAAA;AACO,SAASA,gBAAT,GAA4B;AAC/B,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,KAAvC,CAA6CC,IAA7C,EAApB;AACA,MAAMC,QAAQ,GAAG,EAAjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,QAAMC,OAAO,GAAGC,eAAe,CAACR,WAAD,EAAcM,CAAd,CAA/B;AACAD,IAAAA,QAAQ,CAACI,IAAT,CAAcF,OAAd;AACH;;AACD,SAAOF,QAAP;AACH,C,CACD;;;AACO,SAASK,iBAAT,GAA6B;AAChC,MAAMV,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,KAAvC,CAA6CC,IAA7C,EAApB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYZ,WAAZ;AACA,MAAMK,QAAQ,GAAG,EAAjB;AACAA,EAAAA,QAAQ,CAACI,IAAT,CAAcT,WAAd;AACA,SAAOK,QAAP;AACH,C,CAED;;;AACO,SAASQ,aAAT,CAAuBC,KAAvB,EAA8B;AACjC,SAAO,QAAQC,IAAR,CAAaD,KAAb,CAAP;AACH,C,CAED;;;AACO,SAASN,eAAT,CAAyBR,WAAzB,EAAsCgB,KAAtC,EAA6C;AAChD,MAAIC,MAAM,GAAGjB,WAAb;AACA,MAAIkB,iBAAiB,GAAGC,QAAQ,CAACF,MAAD,CAAR,GAAmBD,KAA3C;AACA,MAAMT,OAAO,GAAGW,iBAAiB,CAACE,QAAlB,GAA6BC,QAA7B,CAAsCJ,MAAM,CAACK,MAA7C,EAAqD,GAArD,CAAhB;AACA,SAAOf,OAAP;AACH","sourcesContent":["//產生三個\nexport function generateVariants() {\n    const NumberInput = document.getElementById('NumberInput').value.trim();\n    const variants = [];\n    for (let i = 1; i <= 3; i++) {\n        const variant = generateVariant(NumberInput, i);\n        variants.push(variant);\n    }\n    return variants;\n}\n//一個\nexport function generateVariants2() {\n    const NumberInput = document.getElementById('NumberInput').value.trim();\n    console.log(NumberInput)\n    const variants = [];\n    variants.push(NumberInput);\n    return variants;\n}\n\n// 导出检查输入是否是数字的函数\nexport function isValidNumber(input) {\n    return /^\\d+$/.test(input);\n}\n\n// 导出生成单个变体的函数\nexport function generateVariant(NumberInput, index) {\n    let number = NumberInput;\n    let incrementedNumber = parseInt(number) + index;\n    const variant = incrementedNumber.toString().padStart(number.length, '0');\n    return variant;\n}\n"],"file":"addAccount.dev.js"}